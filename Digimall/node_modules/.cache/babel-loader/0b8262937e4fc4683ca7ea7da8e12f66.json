{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { withConfigConsumer } from '../config-provider/context';\nimport Skeleton from '../skeleton';\nimport StatisticNumber from './Number';\n\nvar Statistic = function Statistic(props) {\n  var prefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      valueStyle = props.valueStyle,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      title = props.title,\n      valueRender = props.valueRender,\n      prefix = props.prefix,\n      suffix = props.suffix,\n      loading = props.loading,\n      direction = props.direction,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave;\n  var valueNode =\n  /*#__PURE__*/\n  React.createElement(StatisticNumber, _extends({}, props, {\n    value: value\n  }));\n  var cls = classNames(prefixCls, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), className);\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: cls,\n      style: style,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave\n    }, title &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-title\")\n    }, title),\n    /*#__PURE__*/\n    React.createElement(Skeleton, {\n      paragraph: false,\n      loading: loading\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: valueStyle,\n      className: \"\".concat(prefixCls, \"-content\")\n    }, prefix &&\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-content-prefix\")\n    }, prefix), valueRender ? valueRender(valueNode) : valueNode, suffix &&\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-content-suffix\")\n    }, suffix))))\n  );\n};\n\nStatistic.defaultProps = {\n  decimalSeparator: '.',\n  groupSeparator: ',',\n  loading: false\n};\nvar WrapperStatistic = withConfigConsumer({\n  prefixCls: 'statistic'\n})(Statistic);\nexport default WrapperStatistic;","map":null,"metadata":{},"sourceType":"module"}