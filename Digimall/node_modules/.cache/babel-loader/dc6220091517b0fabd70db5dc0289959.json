{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\nimport { useRef } from 'react';\nimport { composeRef } from \"rc-util/es/ref\";\nimport raf from \"rc-util/es/raf\";\nimport Tooltip from '../tooltip';\nvar SliderTooltip =\n/*#__PURE__*/\nReact.forwardRef(function (props, ref) {\n  var visible = props.visible;\n  var innerRef = useRef(null);\n  var rafRef = useRef(null);\n\n  function cancelKeepAlign() {\n    raf.cancel(rafRef.current);\n    rafRef.current = null;\n  }\n\n  function keepAlign() {\n    rafRef.current = raf(function () {\n      innerRef.current.forcePopupAlign();\n      rafRef.current = null;\n      keepAlign();\n    });\n  }\n\n  React.useEffect(function () {\n    if (visible) {\n      keepAlign();\n    } else {\n      cancelKeepAlign();\n    }\n\n    return cancelKeepAlign;\n  }, [visible]);\n  return (\n    /*#__PURE__*/\n    React.createElement(Tooltip, _extends({\n      ref: composeRef(innerRef, ref)\n    }, props))\n  );\n});\nexport default SliderTooltip;","map":null,"metadata":{},"sourceType":"module"}