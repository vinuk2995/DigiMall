{"ast":null,"code":"function t(t) {\n  return null != t && \"object\" == typeof t && 1 === t.nodeType;\n}\n\nfunction e(t, e) {\n  return (!e || \"hidden\" !== t) && \"visible\" !== t && \"clip\" !== t;\n}\n\nfunction n(t, n) {\n  if (t.clientHeight < t.scrollHeight || t.clientWidth < t.scrollWidth) {\n    var r = getComputedStyle(t, null);\n    return e(r.overflowY, n) || e(r.overflowX, n) || function (t) {\n      var e = function (t) {\n        if (!t.ownerDocument || !t.ownerDocument.defaultView) return null;\n\n        try {\n          return t.ownerDocument.defaultView.frameElement;\n        } catch (t) {\n          return null;\n        }\n      }(t);\n\n      return !!e && (e.clientHeight < t.scrollHeight || e.clientWidth < t.scrollWidth);\n    }(t);\n  }\n\n  return !1;\n}\n\nfunction r(t, e, n, r, i, o, l, d) {\n  return o < t && l > e || o > t && l < e ? 0 : o <= t && d <= n || l >= e && d >= n ? o - t - r : l > e && d < n || o < t && d > n ? l - e + i : 0;\n}\n\nexport default function (e, i) {\n  var o = window,\n      l = i.scrollMode,\n      d = i.block,\n      u = i.inline,\n      h = i.boundary,\n      a = i.skipOverflowHiddenElements,\n      c = \"function\" == typeof h ? h : function (t) {\n    return t !== h;\n  };\n  if (!t(e)) throw new TypeError(\"Invalid target\");\n\n  for (var f = document.scrollingElement || document.documentElement, s = [], p = e; t(p) && c(p);) {\n    if ((p = p.parentNode) === f) {\n      s.push(p);\n      break;\n    }\n\n    p === document.body && n(p) && !n(document.documentElement) || n(p, a) && s.push(p);\n  }\n\n  for (var g = o.visualViewport ? o.visualViewport.width : innerWidth, m = o.visualViewport ? o.visualViewport.height : innerHeight, w = window.scrollX || pageXOffset, v = window.scrollY || pageYOffset, W = e.getBoundingClientRect(), b = W.height, H = W.width, y = W.top, M = W.right, E = W.bottom, V = W.left, x = \"start\" === d || \"nearest\" === d ? y : \"end\" === d ? E : y + b / 2, I = \"center\" === u ? V + H / 2 : \"end\" === u ? M : V, C = [], T = 0; T < s.length; T++) {\n    var k = s[T],\n        B = k.getBoundingClientRect(),\n        D = B.height,\n        O = B.width,\n        R = B.top,\n        X = B.right,\n        Y = B.bottom,\n        L = B.left;\n    if (\"if-needed\" === l && y >= 0 && V >= 0 && E <= m && M <= g && y >= R && E <= Y && V >= L && M <= X) return C;\n    var S = getComputedStyle(k),\n        j = parseInt(S.borderLeftWidth, 10),\n        N = parseInt(S.borderTopWidth, 10),\n        q = parseInt(S.borderRightWidth, 10),\n        z = parseInt(S.borderBottomWidth, 10),\n        A = 0,\n        F = 0,\n        G = \"offsetWidth\" in k ? k.offsetWidth - k.clientWidth - j - q : 0,\n        J = \"offsetHeight\" in k ? k.offsetHeight - k.clientHeight - N - z : 0;\n    if (f === k) A = \"start\" === d ? x : \"end\" === d ? x - m : \"nearest\" === d ? r(v, v + m, m, N, z, v + x, v + x + b, b) : x - m / 2, F = \"start\" === u ? I : \"center\" === u ? I - g / 2 : \"end\" === u ? I - g : r(w, w + g, g, j, q, w + I, w + I + H, H), A = Math.max(0, A + v), F = Math.max(0, F + w);else {\n      A = \"start\" === d ? x - R - N : \"end\" === d ? x - Y + z + J : \"nearest\" === d ? r(R, Y, D, N, z + J, x, x + b, b) : x - (R + D / 2) + J / 2, F = \"start\" === u ? I - L - j : \"center\" === u ? I - (L + O / 2) + G / 2 : \"end\" === u ? I - X + q + G : r(L, X, O, j, q + G, I, I + H, H);\n      var K = k.scrollLeft,\n          P = k.scrollTop;\n      x += P - (A = Math.max(0, Math.min(P + A, k.scrollHeight - D + J))), I += K - (F = Math.max(0, Math.min(K + F, k.scrollWidth - O + G)));\n    }\n    C.push({\n      el: k,\n      top: A,\n      left: F\n    });\n  }\n\n  return C;\n}","map":null,"metadata":{},"sourceType":"module"}