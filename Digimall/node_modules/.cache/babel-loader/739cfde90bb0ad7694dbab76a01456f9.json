{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport { getOffset } from \"rc-util/es/Dom/css\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport Preview from './Preview';\nimport PreviewGroup, { context } from './PreviewGroup';\n\nvar ImageInternal = function ImageInternal(_ref) {\n  var src = _ref.src,\n      alt = _ref.alt,\n      onInitialPreviewClose = _ref.onPreviewClose,\n      _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? 'rc-image' : _ref$prefixCls,\n      _ref$previewPrefixCls = _ref.previewPrefixCls,\n      previewPrefixCls = _ref$previewPrefixCls === void 0 ? \"\".concat(prefixCls, \"-preview\") : _ref$previewPrefixCls,\n      placeholder = _ref.placeholder,\n      fallback = _ref.fallback,\n      width = _ref.width,\n      height = _ref.height,\n      style = _ref.style,\n      _ref$preview = _ref.preview,\n      preview = _ref$preview === void 0 ? true : _ref$preview,\n      className = _ref.className,\n      onClick = _ref.onClick,\n      wrapperClassName = _ref.wrapperClassName,\n      wrapperStyle = _ref.wrapperStyle,\n      crossOrigin = _ref.crossOrigin,\n      decoding = _ref.decoding,\n      loading = _ref.loading,\n      referrerPolicy = _ref.referrerPolicy,\n      sizes = _ref.sizes,\n      srcSet = _ref.srcSet,\n      useMap = _ref.useMap,\n      otherProps = _objectWithoutProperties(_ref, [\"src\", \"alt\", \"onPreviewClose\", \"prefixCls\", \"previewPrefixCls\", \"placeholder\", \"fallback\", \"width\", \"height\", \"style\", \"preview\", \"className\", \"onClick\", \"wrapperClassName\", \"wrapperStyle\", \"crossOrigin\", \"decoding\", \"loading\", \"referrerPolicy\", \"sizes\", \"srcSet\", \"useMap\"]);\n\n  var isCustomPlaceholder = placeholder && placeholder !== true;\n\n  var _ref2 = _typeof(preview) === 'object' ? preview : {},\n      _ref2$visible = _ref2.visible,\n      visible = _ref2$visible === void 0 ? undefined : _ref2$visible,\n      _ref2$onVisibleChange = _ref2.onVisibleChange,\n      onVisibleChange = _ref2$onVisibleChange === void 0 ? onInitialPreviewClose : _ref2$onVisibleChange,\n      _ref2$getContainer = _ref2.getContainer,\n      getContainer = _ref2$getContainer === void 0 ? undefined : _ref2$getContainer;\n\n  var isControlled = visible !== undefined;\n\n  var _useMergedState = useMergedState(!!visible, {\n    value: visible,\n    onChange: onVisibleChange\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      isShowPreview = _useMergedState2[0],\n      setShowPreview = _useMergedState2[1];\n\n  var _useState = useState(isCustomPlaceholder ? 'loading' : 'normal'),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mousePosition = _useState4[0],\n      setMousePosition = _useState4[1];\n\n  var isError = status === 'error';\n\n  var _React$useContext = React.useContext(context),\n      isPreviewGroup = _React$useContext.isPreviewGroup,\n      previewUrls = _React$useContext.previewUrls,\n      setPreviewUrls = _React$useContext.setPreviewUrls,\n      setCurrent = _React$useContext.setCurrent,\n      setGroupShowPreview = _React$useContext.setShowPreview,\n      setGroupMousePosition = _React$useContext.setMousePosition;\n\n  var groupIndexRef = React.useRef(0);\n\n  var onLoad = function onLoad() {\n    setStatus('normal');\n  };\n\n  var onError = function onError() {\n    setStatus('error');\n\n    if (isPreviewGroup) {\n      previewUrls.splice(groupIndexRef.current);\n      setPreviewUrls(previewUrls);\n    }\n  };\n\n  var onPreview = function onPreview(e) {\n    if (!isControlled) {\n      var _getOffset = getOffset(e.target),\n          left = _getOffset.left,\n          top = _getOffset.top;\n\n      if (isPreviewGroup) {\n        setCurrent(src);\n        setGroupMousePosition({\n          x: left,\n          y: top\n        });\n      } else {\n        setMousePosition({\n          x: left,\n          y: top\n        });\n      }\n    }\n\n    if (isPreviewGroup) {\n      setGroupShowPreview(true);\n    } else {\n      setShowPreview(true);\n    }\n\n    if (onClick) onClick(e);\n  };\n\n  var onPreviewClose = function onPreviewClose(e) {\n    e.stopPropagation();\n    setShowPreview(false);\n\n    if (!isControlled) {\n      setMousePosition(null);\n    }\n  };\n\n  var getImgRef = function getImgRef(img) {\n    if (status !== 'loading') return;\n\n    if ((img === null || img === void 0 ? void 0 : img.complete) && (img.naturalWidth || img.naturalHeight)) {\n      onLoad();\n    }\n  };\n\n  React.useEffect(function () {\n    if (isPreviewGroup && previewUrls.indexOf(src) < 0) {\n      groupIndexRef.current = previewUrls.length;\n      previewUrls.push(src);\n      setPreviewUrls(previewUrls);\n    }\n  }, [previewUrls]);\n  React.useEffect(function () {\n    if (isCustomPlaceholder) {\n      setStatus('loading');\n    }\n\n    return function () {\n      setPreviewUrls(previewUrls.filter(function (url) {\n        return url !== src;\n      }));\n    };\n  }, [src]);\n  var wrappperClass = cn(prefixCls, wrapperClassName, _defineProperty({}, \"\".concat(prefixCls, \"-error\"), isError));\n  var mergedSrc = isError && fallback ? fallback : src;\n  var imgCommonProps = {\n    crossOrigin: crossOrigin,\n    decoding: decoding,\n    loading: loading,\n    referrerPolicy: referrerPolicy,\n    sizes: sizes,\n    srcSet: srcSet,\n    useMap: useMap,\n    alt: alt,\n    className: cn(\"\".concat(prefixCls, \"-img\"), _defineProperty({}, \"\".concat(prefixCls, \"-img-placeholder\"), placeholder === true), className),\n    style: _objectSpread({\n      height: height\n    }, style)\n  };\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(\"div\", Object.assign({}, otherProps, {\n      className: wrappperClass,\n      onClick: preview && !isError ? onPreview : onClick,\n      style: _objectSpread({\n        width: width,\n        height: height\n      }, wrapperStyle)\n    }), isError && fallback ?\n    /*#__PURE__*/\n    React.createElement(\"img\", Object.assign({}, imgCommonProps, {\n      src: fallback\n    })) :\n    /*#__PURE__*/\n    React.createElement(\"img\", Object.assign({}, imgCommonProps, {\n      onLoad: onLoad,\n      onError: onError,\n      src: src,\n      ref: getImgRef\n    })), status === 'loading' &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      \"aria-hidden\": \"true\",\n      className: \"\".concat(prefixCls, \"-placeholder\")\n    }, placeholder)), !isPreviewGroup && preview && !isError &&\n    /*#__PURE__*/\n    React.createElement(Preview, {\n      \"aria-hidden\": !isShowPreview,\n      visible: isShowPreview,\n      prefixCls: previewPrefixCls,\n      onClose: onPreviewClose,\n      mousePosition: mousePosition,\n      src: mergedSrc,\n      alt: alt,\n      getContainer: getContainer\n    }))\n  );\n};\n\nImageInternal.PreviewGroup = PreviewGroup;\nImageInternal.displayName = 'Image';\nexport default ImageInternal;","map":null,"metadata":{},"sourceType":"module"}